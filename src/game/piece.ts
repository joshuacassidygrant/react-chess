import {Coordinate} from "../types";
import {pieceOfColorAtCoordinate, emptyCoordinate, playerFlip, makeLine, makeJump, getOpponent} from "../utils";
import {TokenMap, GridData} from "../types";

export type Piece = {
    symbol: string,
    pointValue: number,
    paths: string[],
    getLegalMoves: (tokenKey: string, tokenMap: TokenMap, grid: GridData) => Coordinate[]
}

export const Pawn: Piece = {
    symbol:"♙",
    pointValue: 1, 
    getLegalMoves: (tokenKey, tokenMap, grid) => {
        const token = tokenMap[tokenKey];
        if (!token.coord) return [];
        const c: Coordinate = token.coord;
        const oneFrontCoord: Coordinate = {x: c.x, y:c.y - 1 * playerFlip(token.player), grid};
        const twoFrontCoord: Coordinate = {x: c.x, y:c.y - 2 * playerFlip(token.player), grid};
        const captureCoordLeft: Coordinate = {x: c.x - 1, y:c.y-1 * playerFlip(token.player), grid};
        const captureCoordRight: Coordinate = {x: c.x + 1, y:c.y-1 * playerFlip(token.player), grid};

        return [
                ...(emptyCoordinate(oneFrontCoord, tokenMap)) ? [oneFrontCoord] : [],
                ...((!token.hasMoved) && emptyCoordinate(twoFrontCoord, tokenMap) && emptyCoordinate(oneFrontCoord, tokenMap)) ? [twoFrontCoord] : [],
                ...(pieceOfColorAtCoordinate(captureCoordLeft, getOpponent(token.player), tokenMap)) ? [captureCoordLeft] : [],
                ...(pieceOfColorAtCoordinate(captureCoordRight, getOpponent(token.player), tokenMap)) ? [captureCoordRight] : [],
                //TODO: en passant, promotion
            ];
    },
    paths: ["m 116.28186,18.181074 c -8.35841,1.876062 -17.70358,8.383639 -21.128207,14.773971 -4.585509,8.5009 -4.295284,20.226263 0.696544,31.189496 0.986753,2.051937 1.74133,3.869368 1.74133,4.103874 0,0.234522 -0.870673,0.762163 -1.973506,1.113913 -5.746406,2.110568 -14.627214,9.673444 -18.284018,15.653379 -4.2953,6.859336 -6.152726,18.232953 -4.469428,26.792463 2.379825,12.19439 8.126232,20.98842 16.48464,25.20956 l 3.656804,1.81743 -3.076372,1.7588 c -19.154674,10.84597 -29.312461,20.57804 -36.684116,34.94163 -5.10793,9.96657 -8.416462,22.39546 -9.577359,36.23141 -0.696528,7.856 -0.870656,22.51272 -0.290224,26.79249 l 0.406321,2.69682 h 80.275551 80.27555 l 0.40631,-2.11057 c 0.23217,-1.17253 0.23217,-8.50089 0.0581,-16.29826 -0.5224,-24.50603 -4.12115,-38.92825 -13.00196,-52.47104 -7.13948,-10.78736 -18.45816,-20.81255 -32.56298,-28.84444 l -4.81768,-2.75547 2.20568,-0.87939 c 3.36658,-1.34842 9.11299,-5.86269 11.72499,-9.20442 5.28206,-6.7421 7.31363,-13.48417 7.31363,-24.03701 -0.0581,-11.315003 -2.90223,-18.877855 -9.75149,-25.737199 -4.1792,-4.162504 -6.61707,-5.92132 -12.07326,-8.618143 l -4.00507,-1.993323 1.68329,-3.10722 c 3.13441,-5.569554 4.87574,-11.842625 4.93378,-17.705316 0.0581,-6.448961 -1.16089,-10.72871 -4.41137,-15.887883 C 145.072,20.350272 130.79304,15.015224 116.28192,18.181074 Z m 14.16285,13.484182 c 3.88899,1.641557 6.67512,3.927998 8.41645,7.035218 1.45113,2.520965 1.6833,3.576249 1.6833,7.328371 0,3.927999 -0.23217,4.807391 -2.03155,8.207747 -4.00508,7.504246 -4.58552,9.028541 -4.8177,12.897925 -0.23218,3.5176 -0.11617,3.927998 1.33502,5.393663 0.87067,0.879408 4.23726,3.400356 7.4297,5.569554 7.37165,4.866036 11.78303,9.32167 14.16285,14.246321 2.43788,5.100542 3.30855,10.025195 2.90224,16.239645 -0.63849,8.85266 -3.54072,13.07379 -13.6985,19.81588 -6.32686,4.22114 -8.18429,6.21445 -8.18429,9.02853 0,4.9833 4.8177,9.96658 16.36856,17.0018 13.6985,8.26641 23.27584,18.05709 29.08029,29.66521 4.00508,8.03187 7.08143,20.5194 7.66188,31.1895 0.17413,3.16585 0.46435,6.85934 0.58045,8.20776 l 0.29021,2.52095 H 124.292 56.960383 v -5.45229 c 0,-6.56621 1.218929,-16.06378 2.844179,-22.45409 4.469428,-17.58808 14.395038,-30.31011 33.956033,-43.50117 5.049861,-3.45897 10.389965,-7.38698 11.783035,-8.79401 2.96026,-2.87272 5.10791,-7.15248 4.58551,-9.20442 -0.5224,-2.1692 -3.13441,-4.86603 -7.89406,-8.26639 -7.719908,-5.4523 -11.260632,-10.08383 -13.060009,-17.06043 -1.799378,-7.03522 -0.290225,-15.242983 4.063124,-21.86782 2.960258,-4.514264 5.920534,-7.211087 13.060015,-11.842619 7.08143,-4.690145 7.836,-5.628184 7.836,-10.025193 -0.0581,-3.107221 -0.46435,-4.514271 -2.7281,-9.497553 -5.16596,-11.080477 -5.39813,-12.780663 -2.84417,-18.174326 3.19244,-6.800712 8.53255,-9.966564 15.7881,-9.438921 2.14766,0.175875 4.87574,0.703517 6.09467,1.231158 z"]
}

export const Bishop: Piece = {
    symbol:"♗",
    pointValue: 3, 
    getLegalMoves: (tokenKey, tokenMap, grid) => {
        const token = tokenMap[tokenKey];
        if (!token.coord) return [];
        return [
            ...makeLine(1, 1, token, tokenMap),
            ...makeLine(1, -1, token, tokenMap),
            ...makeLine(-1, 1, token, tokenMap),
            ...makeLine(-1, -1, token, tokenMap),
        ]
    },
    paths: [
        "m 124.07636,6.2345391 c -6.77009,1.8134956 -11.50915,5.5471389 -14.00887,10.8809279 -1.24987,2.666895 -1.35403,3.520309 -1.35403,9.334123 0.0521,5.707163 0.20831,6.773912 1.40609,9.760838 0.78117,1.866822 2.3435,4.747066 3.43714,6.507221 l 2.03102,3.093594 -1.61441,0.320017 C 106.05751,47.678064 84.914021,63.786099 76.425373,74.720356 64.23922,90.561703 62.104038,107.36314 70.123988,125.17797 c 2.343491,5.12044 7.44709,13.12113 11.925763,18.61492 1.926874,2.34687 3.489196,4.48038 3.489196,4.80041 0,0.26669 -0.937396,4.00034 -2.03102,8.26738 -5.15568,19.68167 -4.999452,18.88159 -4.009975,21.60183 2.083101,5.54712 7.707473,8.53405 21.664268,11.30761 2.86426,0.58672 -14.00887,5.17378 -22.653745,6.13386 -3.645424,0.4267 -8.696957,0.48004 -16.768973,0.10675 -6.353466,-0.2667 -13.019402,-0.32004 -14.842114,-0.10675 -7.551252,0.90674 -16.0399,7.52065 -21.664278,16.9081 l -2.655947,4.48039 4.478659,6.72057 c 8.33242,12.42771 13.383938,18.50823 16.873149,20.32171 l 1.822712,0.96009 0.989477,-1.81348 c 1.041543,-1.97351 2.655947,-3.25362 5.15568,-4.00035 1.822712,-0.58671 24.111916,-3.68031 35.725203,-5.01376 19.268707,-2.24018 30.205007,-5.86716 39.995587,-13.44114 l 4.37453,-3.36029 3.17673,2.45355 c 10.46758,8.05402 27.3928,12.90776 54.7856,15.68133 16.24821,1.70682 21.56013,2.88025 25.10139,5.65381 0.98948,0.74673 2.03104,1.9735 2.3435,2.66689 l 0.57286,1.28012 2.49971,-1.44012 c 4.99946,-2.77358 9.73852,-8.69408 19.11248,-23.9487 l 1.71857,-2.77358 -1.8748,-3.2536 c -3.59335,-6.29387 -8.69695,-11.89435 -13.43601,-14.9346 -2.5518,-1.54681 -7.65542,-3.20028 -10.51967,-3.30695 -1.45818,-0.0534 -7.96787,0.1066 -14.58173,0.32002 -15.31081,0.53338 -22.80998,-0.48004 -35.67314,-4.74706 -3.12466,-1.01343 -3.64544,-1.33344 -2.60388,-1.54681 0.72909,-0.16001 3.07258,-0.64005 5.25984,-1.12009 10.88421,-2.24019 17.13353,-7.0406 17.13353,-13.12111 0,-2.08018 -1.30195,-7.09394 -4.37453,-17.06811 -0.98948,-3.0936 -1.87479,-6.66723 -2.0831,-8.00069 -0.31247,-2.34686 -0.20831,-2.50687 2.60388,-5.86715 4.1662,-4.96043 10.2072,-14.45457 12.70693,-19.89504 1.19779,-2.56021 2.76011,-7.04058 3.43711,-9.8675 1.19779,-4.53372 1.30195,-5.9205 1.09364,-11.5743 -0.46869,-11.841013 -4.47867,-21.388489 -13.0194,-31.095986 -9.11357,-10.40089 -26.50749,-23.308648 -34.57952,-25.762193 -1.24985,-0.373359 -2.23933,-0.746732 -2.23933,-0.853399 0,-0.106743 0.57286,-1.013423 1.24987,-1.920163 3.12465,-4.320367 5.52022,-11.360969 5.52022,-16.374726 0,-2.826903 -1.51024,-9.120773 -2.81219,-11.680985 -2.34349,-4.533732 -7.96787,-8.534066 -13.85264,-9.654156 -3.90581,-0.7467317 -11.19669,-0.5867231 -14.58172,0.3200171 z M 135.5855,18.768939 c 2.65596,0.906755 5.15568,3.040268 5.98893,5.067098 1.56232,3.840326 0.52077,9.547473 -2.23934,12.054359 -4.27037,4.000334 -12.96732,2.986927 -16.14405,-1.866822 -1.51025,-2.240195 -2.03103,-6.027179 -1.19778,-8.640732 0.78115,-2.453545 3.38503,-5.547139 5.46813,-6.453879 1.92687,-0.853414 5.78062,-0.960082 8.12411,-0.160024 z m 3.59336,35.149655 c 5.1036,1.81348 11.71746,5.38713 17.75845,9.494132 16.82107,11.574321 26.45541,23.415334 28.90306,35.469693 0.67701,3.306941 0.67701,4.053681 -0.31247,9.067431 -2.81219,14.29455 -5.5723,18.50824 -14.11301,21.49516 -9.73852,3.36029 -37.44379,4.96042 -59.05599,3.41361 -21.560117,-1.60013 -28.121886,-4.85373 -31.819405,-16.00135 -2.135167,-6.45388 -3.124645,-13.81449 -2.395557,-18.081533 0.833235,-5.173766 4.947371,-13.174453 9.634347,-18.721592 8.853185,-10.560898 25.153465,-22.188543 36.922995,-26.402242 4.6349,-1.653472 9.3219,-1.600131 14.47758,0.266691 z m -35.15238,88.540846 c 14.99834,1.44012 46.76567,1.17345 60.09755,-0.58671 2.13516,-0.26669 3.95789,-0.37337 4.06204,-0.32003 0.10422,0.10674 -0.20831,1.22677 -0.62493,2.50688 -0.98948,2.93359 -0.98948,9.60082 0,12.10769 0.41662,1.01342 0.78117,1.9735 0.78117,2.08019 0,0.0534 -0.78117,-0.10675 -1.66648,-0.37338 -6.97841,-2.02683 -35.36069,-3.20026 -51.45266,-2.13351 -8.80112,0.58672 -16.977297,1.65347 -18.85209,2.45355 -0.885315,0.37335 -0.885315,0.26669 -0.156228,-1.54681 1.406095,-3.46695 1.562323,-7.68065 0.312456,-11.36095 -1.354014,-4.16036 -1.354014,-4.05368 0.364551,-3.68032 0.781154,0.16001 4.009971,0.53338 7.134621,0.8534 z m 57.3895,24.26873 c 6.30139,1.22677 10.31136,4.10701 9.94683,7.14728 -0.20831,1.76014 -2.60388,2.98691 -7.18672,3.78699 -10.46759,1.76015 -60.09753,2.08017 -66.242687,0.42669 -3.957894,-1.06674 -5.624379,-2.24019 -5.624379,-3.94699 0,-1.86683 1.406095,-4.16036 3.228822,-5.22712 1.510241,-0.96008 9.217724,-2.02683 21.299724,-2.98691 8.43657,-0.64007 39.89143,-0.10674 44.57841,0.80006 z m -25.9867,21.81519 c 1.35401,0.74672 4.89529,3.14692 7.91578,5.38712 5.78062,4.26702 13.69641,8.53406 19.26871,10.40089 5.52022,1.81348 11.19668,2.56021 30.98616,4.05367 20.36233,1.49346 22.54959,1.92016 26.09087,5.12044 2.49972,2.29352 3.17673,5.0671 1.82271,8.10735 -1.24986,2.93359 -2.96841,4.16036 -5.88477,4.16036 -1.24986,0 -6.2493,-0.58672 -11.19667,-1.3868 -4.94737,-0.74673 -10.9363,-1.38678 -13.27979,-1.38678 -4.6349,0 -15.83158,-1.44012 -25.15346,-3.2536 -15.15459,-2.93359 -26.24711,-8.74742 -31.66317,-16.48141 -1.19778,-1.70681 -2.34349,-3.14693 -2.49973,-3.14693 -0.15623,-0.0534 -0.52078,0.48004 -0.83324,1.1201 -0.31247,0.69339 -1.56233,2.40021 -2.76012,3.78699 -8.54071,9.8675 -28.642673,16.37472 -55.723,17.97485 -4.739063,0.26669 -12.082006,1.06677 -16.35237,1.76016 -9.946809,1.65347 -12.081991,1.2801 -13.696394,-2.6669 -2.603881,-6.45388 2.03102,-11.09428 12.60277,-12.69441 2.864269,-0.42671 10.936285,-1.01342 17.966758,-1.28011 17.185599,-0.74673 26.507482,-2.24019 34.527436,-5.70715 3.74958,-1.65347 4.84322,-2.29353 9.21773,-5.81383 7.44709,-5.97384 12.70694,-9.33412 14.73797,-9.33412 0.78116,0 2.5518,0.58671 3.90582,1.28011 z",
        "m 125.84699,73.333575 c -0.15623,0.373374 -0.20831,3.733659 -0.10407,7.413961 l 0.15622,6.720573 -5.72852,0.160024 -5.72854,0.160008 v 6.667229 6.66724 l 5.72854,0.16001 5.72852,0.16001 -0.15622,7.41396 -0.15625,7.4673 h 6.24932 6.30139 v -7.4673 -7.4673 h 5.72854 5.72854 v -6.93392 -6.93392 h -5.72854 -5.72854 v -7.467305 -7.467301 h -5.98892 c -4.63491,0 -6.09309,0.160023 -6.3014,0.746731 z"        
    ]
}

export const Knight: Piece = {
    symbol: "♘",
    pointValue: 3, 
    getLegalMoves: (tokenKey, tokenMap, grid) => {
        const token = tokenMap[tokenKey];
        if (!token.coord) return [];
        return [
            ...makeJump(1, 2, token.coord, token.player, tokenMap),
            ...makeJump(2, 1, token.coord, token.player, tokenMap),
            ...makeJump(-1, 2, token.coord, token.player, tokenMap),
            ...makeJump(2, -1, token.coord, token.player, tokenMap),
            ...makeJump(-1, -2, token.coord, token.player, tokenMap),
            ...makeJump(-2, -1, token.coord, token.player, tokenMap),
            ...makeJump(1, -2, token.coord, token.player, tokenMap),
            ...makeJump(-2, 1, token.coord, token.player, tokenMap),
        ]
    },
    paths: [
        "m 117.84053,19.779825 c -2.32847,1.022228 -6.56204,5.649139 -9.79015,10.598847 -1.64051,2.528667 -3.01641,4.680716 -3.06934,4.78831 -0.10575,0.10767 -2.27554,-1.076017 -4.8686,-2.636261 -9.366789,-5.433919 -17.093069,-7.908781 -26.830289,-8.554391 -3.492694,-0.215219 -6.40328,-0.322813 -6.509126,-0.269008 -0.105906,0.05383 0.2646,3.335675 0.740877,7.263171 1.323001,10.652651 1.164232,17.324002 -0.529185,23.833954 C 64.338731,64.811488 61.851499,70.837229 50.262094,95.747215 37.984719,122.21744 28.670853,144.97538 26.236544,154.55201 l -0.899631,3.38948 1.640509,3.06667 c 7.46168,14.25733 19.791963,20.82109 30.905106,16.46318 0.582108,-0.2152 0.846708,-0.0538 0.846708,0.69942 0,1.39884 2.169709,4.30411 4.445249,5.97195 1.958031,1.39883 6.773726,2.79766 9.737235,2.79766 4.339402,0 5.60948,-1.50642 16.193423,-18.66904 3.439771,-5.59534 13.864957,-16.08657 20.003637,-20.22927 4.2865,-2.85148 13.49452,-7.9088 14.44707,-7.9088 0.63505,0 -0.2646,5.64914 -1.42883,9.30763 -2.01094,6.34855 -3.28102,8.39299 -15.6113,25.39419 -9.684312,13.39653 -13.759129,20.55209 -16.987223,29.91352 -1.640508,4.7345 -3.492694,12.9661 -4.074817,18.07722 l -0.317523,2.85146 h 72.182463 72.18245 l 0.37043,-3.92748 c 0.74087,-9.20001 0.95255,-32.76497 0.37044,-42.61062 C 227.1726,129.15781 213.09597,93.595166 185.68357,66.694529 175.20547,56.364691 166.42079,50.930756 155.57226,48.079292 c -4.39234,-1.129822 -12.85948,-1.614033 -15.18794,-0.807024 -1.0584,0.322812 -1.27008,-0.107518 -3.28103,-6.294749 -3.38685,-10.222229 -6.77371,-15.171953 -13.49452,-19.798864 -3.38686,-2.313448 -3.59854,-2.367252 -5.76824,-1.39883 z m -28.841233,19.637466 4.39234,2.044439 -4.12774,2.044455 c -3.757294,1.829237 -8.625912,3.550879 -10.213497,3.550879 -0.423354,0 -0.582123,-1.452634 -0.5292,-4.465497 0,-2.421057 -0.158754,-5.218731 -0.370431,-6.187154 l -0.476278,-1.721643 3.492694,1.291236 c 1.905109,0.753219 5.450726,2.259658 7.832112,3.443285 z m 33.180643,-0.699415 c 0.58213,1.29122 1.79927,5.272521 2.69891,8.8234 1.90511,7.801187 3.38685,11.997691 4.65693,13.127513 0.74087,0.699415 2.96351,0.860829 13.33575,1.022227 l 12.43613,0.161399 4.2865,2.367268 c 8.30839,4.519301 19.36861,15.225757 28.2591,27.169629 20.21533,27.438648 30.21715,62.732288 28.84123,102.276228 -0.21168,6.18714 -0.52918,12.9661 -0.74086,15.06434 l -0.31752,3.7661 -56.78283,0.1614 -56.83573,0.10767 0.37043,-1.72164 c 1.69343,-7.90878 5.1332,-14.09594 19.89781,-35.67025 4.3394,-6.34854 10.42517,-18.61524 12.33028,-24.80239 2.54014,-8.4468 3.75729,-18.93805 2.75181,-23.72636 -0.47627,-2.15205 1.323,-9.84562 4.97445,-21.1439 1.48176,-4.5731 2.85767,-9.684226 3.01643,-11.352064 0.26461,-2.851464 0.21168,-3.120472 -1.0584,-3.981285 -2.48721,-1.667838 -5.29197,0.269008 -9.47261,6.67135 -5.18613,7.747379 -8.73174,16.355589 -10.63685,25.824619 -0.47628,2.15205 -0.89965,3.98128 -1.00548,3.98128 -21.53832,10.65265 -31.381383,19.15326 -44.240866,38.1989 -6.93248,10.32985 -6.826634,10.22226 -8.784666,9.84564 -3.228094,-0.64561 -3.59854,-1.99063 -1.958032,-6.88657 1.905109,-5.59533 -0.582108,-6.24094 -8.255465,-1.99065 -4.709849,2.58247 -5.186126,2.74389 -7.726281,2.42107 -6.085757,-0.69943 -13.07116,-6.02575 -14.817499,-11.24447 -0.687969,-2.09824 -0.687969,-2.52867 0.423354,-5.75673 2.01094,-6.13335 5.927003,-14.74156 17.622254,-39.00592 14.605838,-30.397723 18.94524,-39.920553 21.802903,-48.044538 l 1.217155,-3.38948 4.286494,-2.098244 c 2.381386,-1.129837 6.93248,-2.959073 10.107666,-4.08891 14.023713,-4.78831 21.220793,-9.576619 25.242693,-16.785986 1.79927,-3.228081 2.27555,-3.174277 4.07481,0.699415 z",
        "m 85.771203,77.45479 c -6.085772,1.721642 -12.277375,6.563757 -14.341238,11.136863 -1.481754,3.335675 -1.428831,8.392993 0.105906,10.383643 1.058401,1.398834 1.323001,1.452634 4.709864,1.237434 C 86.670909,99.405703 99.900823,87.246628 97.572361,80.521457 96.461052,77.347181 91.116158,75.948351 85.771278,77.45479 Z",
        "m 46.187277,144.43738 c -3.386864,2.09824 -4.498172,11.67486 -1.587601,13.55791 1.0584,0.69942 4.604017,0.48422 6.403295,-0.37661 2.593063,-1.23743 3.757294,-3.65849 3.757294,-7.90879 0,-3.06667 -0.211677,-3.76609 -1.270077,-4.94972 -1.587586,-1.72164 -4.815695,-1.88304 -7.302911,-0.32279 z"
    ]
}

export const King: Piece = {
    symbol: "♔",
    pointValue: 4,
    getLegalMoves: (tokenKey, tokenMap, grid) => {
        const token = tokenMap[tokenKey];
        if (!token.coord) return [];
        return [
            ...makeJump(1, 1, token.coord, token.player, tokenMap),
            ...makeJump(0, 1, token.coord, token.player, tokenMap),
            ...makeJump(-1, 1, token.coord, token.player, tokenMap),
            ...makeJump(1, 0, token.coord, token.player, tokenMap),
            ...makeJump(-1, 0, token.coord, token.player, tokenMap),
            ...makeJump(1, -1, token.coord, token.player, tokenMap),
            ...makeJump(0, -1, token.coord, token.player, tokenMap),
            ...makeJump(-1, -1, token.coord, token.player, tokenMap),
            //TODO: handle check, castling
        ]
    },
    paths: ["m 123.6985,24.386021 c -0.14969,0.499013 -1.04791,3.243569 -2.04594,6.137823 l -1.84633,5.239591 -6.08791,0.149712 -6.13782,0.149698 v 5.63881 5.688714 l 6.73663,3.892265 6.73663,3.892279 v 4.141786 c 0,2.295433 -0.19961,4.141772 -0.44911,4.141772 -0.1996,0 -1.89624,1.097819 -3.69268,2.495049 -4.09187,3.093856 -8.73266,8.533064 -10.97821,12.924356 -1.89623,3.642759 -2.29545,5.788508 -2.44514,14.12197 -0.0499,2.994048 -0.1497,5.389303 -0.19961,5.389303 -0.0999,0 -2.04594,-1.247532 -4.29148,-2.844364 -5.139797,-3.493061 -11.826522,-6.636821 -17.365537,-8.133845 -5.3394,-1.497038 -14.321572,-1.646736 -19.660971,-0.349315 -7.285546,1.796435 -13.323561,4.890291 -18.463358,9.381377 -4.191676,3.642778 -6.437219,6.487138 -8.732666,10.928328 -3.043966,5.88831 -3.792471,9.53107 -3.792471,17.96434 0.04993,6.28752 0.199602,7.63484 1.197614,10.47919 1.846338,5.1398 4.690688,10.1798 10.379402,18.21385 10.5291,15.02019 12.724739,18.91247 15.319597,27.14614 2.594843,8.28355 4.191676,17.51523 5.289495,30.48948 0.399219,4.94019 0.798423,6.78653 1.796435,8.83247 3.692677,7.58495 14.920392,12.37544 35.27998,14.97029 9.6309,1.24751 48.00473,1.24751 57.68552,0 17.96435,-2.29545 29.24197,-6.58693 33.73305,-12.77465 2.19564,-2.99406 2.59485,-4.79049 3.24356,-13.77267 0.99802,-14.22177 3.74258,-26.84671 7.58495,-34.58136 1.84633,-3.74257 3.84236,-6.93623 14.47127,-22.60513 9.88039,-14.72079 12.27565,-26.19801 8.13386,-39.22216 -3.09385,-9.83048 -10.7786,-18.01425 -21.40751,-22.854637 -6.18772,-2.844364 -9.63089,-3.493075 -18.01425,-3.443171 -7.03603,0 -7.78455,0.09986 -12.22573,1.596832 -5.2396,1.746531 -11.17781,4.940195 -15.61901,8.333462 -1.54692,1.247517 -2.94415,2.245543 -3.09385,2.245543 -0.1497,0 -0.24951,-1.74653 -0.24951,-3.892279 0,-7.135834 -0.89822,-13.074054 -2.44514,-16.317609 -1.74653,-3.842375 -6.03802,-8.43327 -11.37742,-12.325535 l -4.19169,-3.043966 0.14971,-3.742567 0.1497,-3.792471 6.63682,-3.89228 6.58693,-3.942169 v -5.688714 -5.738618 h -5.9382 -5.88832 l -0.79842,-2.145735 c -0.44911,-1.147723 -1.44712,-3.942183 -2.19564,-6.187726 l -1.39723,-4.141772 h -4.89029 c -4.29149,0 -4.9901,0.09986 -5.18971,0.848313 z m 11.07803,51.797203 c 4.94019,2.045941 7.68475,8.782571 7.73464,18.762754 0,8.882382 -1.59682,13.672862 -8.28356,24.251872 -2.39525,3.79247 -4.541,7.13585 -4.79049,7.48515 -0.99802,1.24751 -10.4293,-14.37148 -12.62494,-20.8586 -1.09782,-3.24357 -1.29742,-4.54099 -1.29742,-10.429313 0,-10.878401 1.94613,-16.068102 7.08592,-18.762754 3.24357,-1.69664 8.68277,-1.896243 12.17585,-0.449109 z M 78.937341,98.888165 c 7.884353,1.996035 16.517225,7.435245 24.700969,15.469295 7.23565,7.13584 11.02812,12.82455 14.62099,21.85662 2.14575,5.38931 4.19169,13.97226 4.39129,18.56315 l 0.1497,3.24357 -1.74653,0.84831 c -6.53703,3.14377 -21.906531,5.03999 -46.208301,5.63881 l -11.078003,0.24951 -5.738618,-7.63485 C 47.549642,143.25011 43.45776,135.61526 42.459749,128.32973 c -0.449109,-3.29347 1.347326,-11.77663 3.343362,-15.81861 1.996037,-4.09188 5.63881,-8.13386 9.032063,-10.03008 2.245543,-1.29744 8.483173,-3.542985 11.57703,-4.241589 2.644747,-0.598821 8.832474,-0.299411 12.525137,0.648714 z m 115.171429,-0.19961 c 4.64078,1.19762 8.93227,3.542975 12.52513,6.786525 5.78851,5.33942 8.73267,12.22574 8.73267,20.60911 0,8.08395 -2.69465,13.72276 -13.42335,27.99443 l -7.88436,10.4293 -11.17781,-0.14971 c -19.66098,-0.2495 -33.78295,-1.49702 -40.61938,-3.64276 -4.09188,-1.24753 -7.08594,-2.69465 -7.33545,-3.54298 -0.2495,-0.64871 0.69862,-7.28553 1.54693,-11.1279 2.29545,-10.0301 6.93623,-19.61108 13.12396,-26.79682 8.98217,-10.47919 21.55721,-18.96237 31.0883,-20.858601 3.44316,-0.698615 10.17979,-0.548917 13.42336,0.299406 z m -62.52591,72.855395 c 4.44118,1.54694 9.23168,2.14575 32.13622,3.94218 12.92436,0.99801 23.75285,1.94614 24.05226,2.04594 0.44911,0.0999 0.49902,0.49902 0.1497,1.39723 -1.19761,3.24356 -3.49306,17.61503 -3.49306,22.20593 0,3.49306 -0.29941,3.69266 -3.99207,2.54494 -21.25782,-6.43722 -61.12868,-7.88435 -88.574213,-3.24356 -3.992074,0.69862 -15.768706,3.39327 -17.365538,4.04198 -0.449109,0.1497 -0.848313,-1.84634 -1.497024,-7.38534 -0.748519,-6.53703 -1.39723,-10.27961 -3.143761,-18.51326 l -0.29941,-1.34733 h 2.894254 c 3.792471,0 26.297806,-1.74653 35.629292,-2.74455 8.33346,-0.89822 14.77068,-1.94613 17.96435,-2.94416 2.94415,-0.94811 2.99404,-0.94811 5.539,0 z m 17.16594,39.62137 c 13.17385,0.89821 21.00829,2.64474 23.80275,5.3394 2.89426,2.79446 0.84832,4.54099 -7.18573,6.13782 -7.23565,1.44713 -14.42138,2.04594 -30.09028,2.34535 -27.34574,0.5489 -49.900966,-1.89624 -51.298196,-5.48911 -0.449109,-1.24752 0.848313,-2.99406 3.093856,-4.14179 3.692677,-1.84632 12.325535,-3.29346 24.75088,-4.14177 8.18376,-0.59881 28.39365,-0.59881 36.92672,-0.0499 z"]
}

export const Queen: Piece = {
    symbol: "♕",
    pointValue: 9,
    getLegalMoves: (tokenKey, tokenMap, grid) => {
        const token = tokenMap[tokenKey];
        if (!token.coord) return [];
        return [
            ...makeLine(1, 0, token, tokenMap),
            ...makeLine(-1, 0, token, tokenMap),
            ...makeLine(0, 1, token, tokenMap),
            ...makeLine(0, -1, token, tokenMap),
            ...makeLine(1, 1, token, tokenMap),
            ...makeLine(1, -1, token, tokenMap),
            ...makeLine(-1, 1, token, tokenMap),
            ...makeLine(-1, -1, token, tokenMap),
        ]
    },
    paths: ["m 125.51446,23.044916 c -6.94404,2.589802 -10.96426,7.363151 -12.15205,14.370846 -0.5939,3.503833 -0.45685,4.468662 1.59895,10.511528 5.07096,15.081758 5.52781,27.776834 1.82738,51.338908 -1.4619,9.394362 -3.56339,20.616812 -3.83749,20.616812 -0.13706,0 -1.82737,-4.1132 -3.79181,-9.14045 C 102.2611,93.12178 98.560667,79.918898 97.372875,68.950347 96.961715,64.837139 97.00739,63.262951 97.875396,56.66151 99.017513,47.92729 98.880451,46.251534 96.778967,41.376618 93.992224,34.978296 89.560831,31.576016 83.439125,31.118993 c -7.766344,-0.558575 -15.304264,4.77335 -17.314388,12.187283 -0.867993,3.402281 -0.867993,9.14046 0.04571,12.54274 0.593896,2.285115 1.370528,3.453064 4.751178,7.210816 5.208025,5.788948 6.167394,7.820159 7.30951,16.198923 0.913681,6.753777 0.228411,37.171195 -0.868006,39.507095 -0.228424,0.45702 -1.37054,-0.60936 -3.609074,-3.40228 -5.345071,-6.55066 -9.593715,-13.15211 -11.96931,-18.585606 -3.472012,-7.972511 -3.74611,-10.257625 -2.466957,-20.769153 0.95938,-8.327981 0.137062,-12.034934 -3.791798,-17.46844 -7.035399,-9.648266 -22.019879,-7.312367 -27.136529,4.214774 -2.329908,5.331939 -2.284221,11.831813 0.137049,17.214536 1.370527,2.996041 5.253712,7.261584 8.588663,9.495915 l 3.015178,1.980428 0.593896,5.179603 c 0.685258,6.398323 3.380638,21.632413 6.258755,35.190773 1.142117,5.58584 2.69538,12.89821 3.380651,16.30048 0.68527,3.3515 1.553263,6.75378 1.964423,7.61704 0.365485,0.8125 4.020233,5.68741 8.086141,10.867 8.177504,10.35919 9.548044,12.3904 11.284044,16.55439 1.7817,4.31633 1.37054,7.46471 -1.827375,15.23409 -3.837484,9.2928 -4.522754,12.13651 -4.796865,19.39809 l -0.182736,6.1952 1.644637,1.72652 c 4.979602,5.23039 21.288935,8.22643 52.034528,9.49593 24.66957,1.01562 50.52694,-0.81247 64.27794,-4.46867 4.11159,-1.06639 9.41099,-3.96086 10.37037,-5.58583 0.68526,-1.11716 0.82231,-2.53902 0.77663,-7.7186 v -6.39833 l -2.19285,-5.33194 c -4.1116,-10.00372 -5.80192,-14.7263 -5.84761,-16.35127 -0.18274,-5.78894 2.55833,-10.61309 13.88806,-24.47612 6.80698,-8.37875 7.21814,-9.34358 9.95919,-21.73398 4.61414,-21.02306 8.68004,-43.772635 8.68004,-48.799888 0,-2.691354 0.18274,-2.894488 3.15222,-4.722579 6.03035,-3.605401 9.77646,-9.394349 10.59878,-16.402044 0.36548,-3.249944 0.27411,-4.062423 -0.77664,-7.76939 -1.09642,-3.757737 -1.50758,-4.519447 -4.24864,-7.566271 -3.65476,-4.062423 -6.25876,-5.230372 -11.46679,-5.281156 -2.92379,0 -3.88317,0.253904 -6.48718,1.624972 -5.71054,2.996041 -9.27393,8.074078 -9.82214,14.015376 -0.13705,1.574189 0.0913,5.839731 0.54821,9.648265 0.73095,6.449106 0.73095,7.109249 0.0457,10.562312 -1.41622,7.058464 -6.1674,15.741903 -14.16216,25.847193 -2.78675,3.50383 -4.20297,4.92568 -4.38571,4.46866 -0.63958,-1.32029 -1.50758,-21.175393 -1.27917,-29.097134 0.41117,-12.695076 2.6497,-20.159794 8.04046,-26.710451 4.29434,-5.17959 4.88825,-6.804562 4.88825,-13.152114 0,-4.874903 -0.0914,-5.585828 -1.32486,-8.124847 -2.14718,-4.570229 -4.1116,-6.906127 -7.49225,-8.734219 -2.78674,-1.523405 -3.38064,-1.675741 -7.40087,-1.675741 -3.83748,0 -4.6598,0.152336 -6.89834,1.421838 -5.80192,3.148391 -9.0455,8.12486 -9.41098,14.472398 -0.13706,1.878876 0.0913,5.839731 0.50252,8.886556 1.4619,10.968551 0.50254,19.550435 -3.88317,33.97205 -2.60401,8.58187 -9.82214,28.081524 -10.91857,29.503374 -0.41116,0.50779 -1.32484,-3.80854 -3.42633,-16.14815 -4.65981,-27.319816 -4.38571,-38.136031 1.32485,-55.858374 1.82736,-5.687395 1.96443,-7.109233 0.91369,-11.628693 -1.27917,-5.636613 -4.38571,-9.952939 -8.58867,-12.034934 -2.78675,-1.320286 -8.40593,-1.777308 -11.00993,-0.812493 z m 7.99477,9.902169 c 2.05579,1.117165 3.1979,3.656184 3.1979,7.109247 0,5.636612 -2.23853,8.226414 -7.08107,8.226414 -4.97961,0 -7.17245,-2.640571 -7.17245,-8.5311 0,-2.437452 0.18274,-3.605401 0.86799,-4.57023 1.27917,-1.980428 3.65476,-3.148377 6.30446,-3.148377 1.27915,0 3.01516,0.406239 3.88317,0.914046 z M 86.454304,43.153941 c 3.654749,2.894473 3.609061,10.917767 -0.09143,13.913808 -1.827375,1.523406 -5.2537,1.726525 -7.812032,0.457024 -2.69538,-1.320286 -3.609061,-3.300729 -3.609061,-7.515488 0,-4.570229 1.416215,-6.906128 4.888227,-7.870958 1.964424,-0.55859 5.299387,-0.05081 6.62424,1.015614 z m 94.795106,0 c 2.10149,1.320285 3.06085,3.80852 2.87812,7.515487 -0.27411,4.925685 -2.28422,7.2108 -6.76129,7.61704 -2.64969,0.304687 -5.71054,-1.421838 -6.89835,-3.910087 -1.69031,-3.45305 -0.77663,-8.78499 1.82739,-11.019321 2.0558,-1.777323 6.30444,-1.878875 8.95413,-0.203119 z M 46.937301,64.27855 c 3.334951,2.132778 4.385694,6.804561 2.558319,11.273238 -1.142104,2.691354 -2.832429,3.706967 -6.350129,3.706967 -4.796866,0 -7.172448,-2.792921 -7.172448,-8.480317 0,-2.386681 0.228423,-3.503847 0.959368,-4.570229 2.147172,-3.300728 6.62424,-4.163991 10.00489,-1.929659 z M 219.3502,63.923094 c 2.55832,1.421852 3.47202,3.19916 3.47202,6.855344 0,3.757736 -0.77664,5.738179 -2.92381,7.312368 -2.96948,2.234331 -8.13182,1.218718 -10.27899,-1.980443 -1.41621,-2.183547 -1.50758,-6.753777 -0.18274,-9.242011 1.91876,-3.605401 6.44151,-4.97647 9.91352,-2.945258 z M 90.154739,86.215652 c 1.827374,6.195202 6.304443,18.331708 8.908448,24.171448 3.426343,7.61704 5.619193,11.22245 10.918573,18.02701 l 4.43139,5.73819 2.78674,-4.97649 c 5.20803,-9.44513 8.40593,-20.15978 11.32974,-37.831338 0.54821,-3.554632 1.14211,-6.398321 1.23347,-6.296769 0.0914,0.15235 1.27917,5.535059 2.60402,12.085731 2.51263,12.136506 4.61411,20.616796 5.80191,23.765196 0.41116,0.96481 2.05579,4.36711 3.65475,7.51548 l 2.96948,5.6874 4.24866,-5.58584 c 5.93897,-7.7694 8.31455,-11.83182 12.01499,-20.31213 3.5177,-8.12485 4.02023,-9.546701 7.21814,-19.04263 l 2.19284,-6.601442 -0.27409,6.347552 c -0.3198,7.413921 0.41115,18.68716 1.91873,30.46819 1.14212,8.48032 2.83244,19.29653 3.10654,19.65199 0.27411,0.30468 6.85266,-4.97647 10.64448,-8.53109 4.65979,-4.31633 11.37539,-12.28885 16.17227,-19.1442 2.55833,-3.70694 3.65475,-4.92568 3.65475,-4.16397 0,2.18355 -4.1116,23.81597 -5.66487,29.80804 -1.59894,6.19521 -3.70043,11.57792 -4.97959,12.74587 -0.50254,0.5078 -1.69033,0.0508 -5.98467,-2.18356 -12.33478,-6.55065 -26.81674,-10.46074 -44.03975,-11.98415 -9.27393,-0.86327 -31.52223,-0.25389 -39.60838,1.01561 -15.212897,2.38668 -28.278627,6.60144 -37.187088,12.03492 -2.741068,1.67576 -2.969478,1.72655 -3.974546,0.96483 -2.512631,-1.82809 -4.888227,-10.25762 -8.817086,-31.48379 -0.776632,-4.21478 -1.644639,-8.5311 -1.873062,-9.64827 -0.22841,-1.06638 -0.365472,-2.08199 -0.274097,-2.18354 0.0913,-0.0508 1.918735,2.33588 4.02022,5.33192 7.446559,10.46076 15.487014,19.09341 23.390419,24.98393 3.974534,2.99604 3.472012,3.60539 4.796853,-5.78897 2.741068,-19.29651 3.883172,-32.245508 3.609074,-41.385968 -0.09143,-3.605399 -0.137062,-6.601441 -0.09143,-6.601441 0.04571,0 0.548208,1.52342 1.142117,3.402281 z m 55.323791,61.850438 c 24.98936,2.3359 36.41047,6.44912 35.90793,12.89822 -0.22841,2.84369 -1.05073,2.94525 -20.10113,1.62495 -21.10619,-1.37107 -36.22772,-1.37107 -61.354136,0 -21.88283,1.21874 -22.156928,1.21874 -22.156928,-1.72652 0,-0.91405 0.319786,-2.13278 0.685257,-2.79292 2.695381,-4.21477 17.360075,-8.78499 32.892777,-10.20685 7.85771,-0.71092 25.26346,-0.60936 34.12623,0.20312 z m 8.58867,25.69486 c 7.40087,0.5078 20.51228,1.82809 22.2483,2.23433 l 1.00505,0.2539 -1.09643,2.18356 c -2.10147,4.1132 -2.604,14.01537 -0.91368,16.96062 0.82232,1.32029 0.86801,1.32029 -2.74107,0.66015 -5.48211,-1.0156 -14.66467,-1.98043 -24.34977,-2.58981 -17.26871,-1.01559 -47.55745,0.0508 -58.795819,2.082 -1.507588,0.30469 -3.380637,0.66014 -4.157282,0.76171 l -1.461902,0.2539 0.639584,-1.87887 c 1.324853,-4.21476 0.456846,-13.60913 -1.598952,-16.80829 l -1.005055,-1.57419 1.050743,-0.2539 c 1.461902,-0.35547 8.680037,-1.21873 15.578375,-1.87887 14.847428,-1.42186 38.694688,-1.57419 55.597908,-0.40624 z m 6.35013,32.14394 c 9.0455,1.21873 13.751,2.53903 15.80679,4.51945 1.91875,1.87888 2.23855,3.80854 0.9137,5.43351 -1.78169,2.18354 -8.31457,3.91007 -19.64429,5.17958 -7.58362,0.86327 -47.32904,0.86327 -55.46085,0 -14.710383,-1.57418 -20.603665,-3.75775 -20.603665,-7.61705 0,-1.57419 1.553264,-3.50384 3.928859,-4.82413 2.147159,-1.21872 8.314552,-2.28511 16.629116,-2.89448 4.15729,-0.30468 8.45161,-0.60936 9.59372,-0.71093 1.14211,-0.10162 11.19268,-0.10162 22.38536,-0.0508 15.07585,0.10162 21.9285,0.35547 26.45126,0.96483 z"]
}

export const Rook: Piece = {
    symbol: "♖",
    pointValue: 5,
    getLegalMoves: (tokenKey, tokenMap, grid) => {
        const token = tokenMap[tokenKey];
        if (!token.coord) return [];
        return [
            ...makeLine(1, 0, token, tokenMap),
            ...makeLine(-1, 0, token, tokenMap),
            ...makeLine(0, 1, token, tokenMap),
            ...makeLine(0, -1, token, tokenMap),
            // TODO: castling
        ]
    },
    paths: ["m 43.956473,23.439765 -5.329049,4.985244 0.0573,17.190487 v 17.190471 l 16.330953,14.2681 16.330953,14.210796 v 37.360637 37.30332 l -18.909523,18.90953 -18.909524,18.90953 v 13.17936 13.23666 l 3.323492,3.2662 3.323492,3.26618 h 86.525393 86.52541 l 3.5527,-3.61 3.55269,-3.61 V 216.83263 204.16898 L 201.42123,185.03025 182.56901,165.94882 V 128.41629 90.883742 l 16.33096,-14.210795 16.27365,-14.15349 V 45.73009 28.998028 l -5.32904,-5.329042 -5.27176,-5.271753 h -16.90396 -16.90397 l -3.26619,2.922386 -3.32349,2.92237 v 5.099854 5.099838 h -5.15715 -5.15714 v -4.698734 -4.698734 l -3.26619,-3.32349 -3.26619,-3.32349 h -20.68588 -20.68587 l -2.97968,3.036981 -2.979683,3.03698 v 4.985243 4.985244 H 94.553776 89.110125 V 29.399132 24.3566 L 86.073141,21.376908 83.036157,18.397233 H 66.189489 l -16.903969,0.05734 z m 33.120318,14.841121 v 4.985243 l 2.693175,2.750471 2.693175,2.750471 h 12.377143 12.319846 l 2.75047,-2.635861 2.69318,-2.578571 v -4.87065 -4.813328 h 14.03888 14.03889 v 4.813328 4.813345 l 2.92238,2.635876 2.92239,2.635861 h 12.14793 l 12.09064,-0.05734 2.75047,-2.521283 2.69318,-2.463961 v -5.214448 -5.214448 h 10.48618 10.4862 l 2.40666,2.463978 2.40667,2.463961 V 48.76702 59.367815 L 189.3306,69.510204 176.66695,79.709879 H 126.75727 L 76.790284,79.652541 64.06933,69.338255 51.291075,59.02397 V 48.996178 38.968402 l 2.406667,-2.865081 2.349365,-2.807776 h 10.543494 10.48619 z M 169.33235,125.2647 v 32.9484 H 126.92917 84.525998 V 125.2647 92.316291 h 42.403172 42.40318 z m 12.77825,56.27016 c 6.07398,5.84475 11.51761,11.11651 12.14794,11.74681 1.08873,1.03143 -0.74492,1.03143 -67.32937,1.03143 l -68.475396,-0.0573 12.033335,-11.68952 12.033334,-11.68953 44.294127,-0.0573 h 44.29413 z m 25.04079,33.12032 v 7.1627 H 126.64266 46.133932 v -7.1627 -7.16271 h 80.508728 80.50873 z"]
}

export const PieceMap: Map<string, Piece> = new Map([
    ["pawn", Pawn],
    ["bishop", Bishop],
    ["knight", Knight],
    ["king", King],
    ["rook", Rook],
    ["queen", Queen]
]);